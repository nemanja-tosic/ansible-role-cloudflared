---
- name: DNS
  tags:
    - cloudflared
    - cloudflared_dns
  block:
    - ansible.builtin.include_tasks:
        file: config.yml

    - name: Update public hostnames config
      blockinfile:
        path: /etc/cloudflared/config.yml
        marker: "# {mark} {{ item.hostname }}"
        insertafter: "ingress:"
        block: |2
              - hostname: "{{ item.hostname }}"
                service: "{{ item.service }}"
      loop: "{{ cloudflared_ingress }}"
      notify: Restart cloudflared

    - name: Get dns records
      uri:
        url: "https://api.cloudflare.com/client/v4/zones/{{ cloudflared_tunnel_zone }}/dns_records"
        method: GET
        headers:
          Authorization: "Bearer {{ cloudflared_tunnel_credentials.api_token }}"
        status_code: 200
      register: records

    - name: Extract cloudflared controlled dns records
      set_fact:
        cloudflared_records: "{{ records.json.result | json_query(query) }}"
      vars:
        query: "[?contains(tags, `{{ cloudflared_tunnel_name }}`)]"

    # https://developers.cloudflare.com/api/operations/dns-records-for-a-zone-create-dns-record
    - name: Add missing zones
      uri:
        url: "https://api.cloudflare.com/client/v4/zones/{{ cloudflared_tunnel_zone }}/dns_records"
        method: POST
        headers:
          Authorization: "Bearer {{ cloudflared_tunnel_credentials.api_token }}"
        status_code: 200
        body_format: json
        body:
          type: CNAME
          name: "{{ item.hostname }}"
          content: "{{ cloudflared_tunnel_url }}"
          proxied: true
          tags:
            - "{{ cloudflared_tunnel_name }}"
      loop: "{{ cloudflared_ingress | json_query(missing_hostnames_query) }}"
      vars:
        missing_hostnames_query: "[?!contains({{ cloudflared_records | map(attribute='name') + [''] }}, hostname)]"

    - name: Update changed records
      uri:
        url: "https://api.cloudflare.com/client/v4/zones/{{ cloudflared_tunnel_zone }}/dns_records/{{ item.id }}"
        method: PATCH
        headers:
          Authorization: "Bearer {{ cloudflared_tunnel_credentials.api_token }}"
        status_code: 200
        body_format: json
        body:
          content: "{{ cloudflared_tunnel_url }}"
          tags:
            - "{{ cloudflared_tunnel_name }}"
      loop: "{{ cloudflared_records | json_query(updated_hostnames_query) }}"
      vars:
        updated_hostnames_query: >
          [?
            contains({{ cloudflared_ingress | map(attribute='hostname') + [''] }}, name) &&
            content != `{{ cloudflared_tunnel_url }}`
          ]

# TODO: find a way to find out which records are not used anymore
#    - name: Remove unused records
#      uri:
#        url: "https://api.cloudflare.com/client/v4/zones/{{ cloudflared_tunnel_zone }}/dns_records/{{ item.id }}"
#        method: DELETE
#        headers:
#          Authorization: "Bearer {{ cloudflared_tunnel_credentials.api_token }}"
#        status_code: 200
#      loop: "{{ cloudflared_records | json_query(removed_hostnames_query) }}"
#      vars:
#        removed_hostnames_query: "[?!contains({{ cloudflared_ingress | map(attribute='hostname') + [''] }}, name)]"
